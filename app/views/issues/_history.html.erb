<% tabs = []
  if journals.present?
    all_tab       = {:label => :label_tab_all,      :name => 'issue-all'}
    comments_tab  = {:label => :label_tab_comments, :name => 'issue-comments'}
    all_flag      = 0
    comment_flag  = 0
    journals.each do |j|
      all_flag      = 1   if all_flag == 0 && j.details.any?
      comment_flag  = 1   if comment_flag == 0 && !j.notes.blank?
      break if (all_flag == 1 && comment_flag == 1)
    end
  end

  wiki_tab        = {:label => :label_tab_wiki,     :name => 'issue-wiki', :onclick => "show_wiki(#{issue.id});"}

  tabs.push ( all_tab ) if all_flag == 1
  tabs.push ( comments_tab ) if comment_flag == 1
  trackers = Setting.plugin_redmine_issue_wiki["issue_wiki_tracker"]
  tabs.push ( wiki_tab ) if trackers && trackers.include?(issue.tracker_id.to_s) && User.current.allowed_to?(:view_issue_wiki, issue.project) %> 

<% selected_tab = 'issue-all' %>

<div class="tabs">
  <ul>
    <% tabs.each do |tab| -%>
        <li><%= link_to l(tab[:label]), "javascript:void(0);",
                              :id => "tab-#{tab[:name]}",
                              :class => (tab[:name] != selected_tab ? nil : 'selected'),
                              :onclick => tab[:onclick].nil? ? "" : tab[:onclick]
        %></li>
    <% end -%>
  </ul>
</div>

<% if tabs.include?(wiki_tab) -%>
<div id="issue-wiki">
</div>
<% end -%>

<% if journals.present? %>
<% reply_links = authorize_for('issues', 'edit') -%>
<% for journal in journals %>
  <% if selected_tab == 'issue-all' || journal.css_classes == 'journal has-notes'%>
    <div id="change-<%= journal.id %>" class="<%= journal.css_classes %>">
      <div id="note-<%= journal.indice %>">
      <h4><%= link_to "##{journal.indice}", {:anchor => "note-#{journal.indice}"}, :class => "journal-link" %>
      <%= avatar(journal.user, :size => "24") %>
      <%#= content_tag('a', '', :name => "note-#{journal.indice}")%>
      <%= authoring journal.created_on, journal.user, :label => :label_updated_time_by %></h4>

      <% if journal.details.any? %>
        <ul class="details">
        <% details_to_strings(journal.visible_details).each do |string| %>
           <li><%= string %></li>
          <% end %>
        </ul>
      <% end %>
      <%= render_notes(issue, journal, :reply_links => reply_links) unless journal.notes.blank? %>
    </div>
    </div>
    <%= call_hook(:view_issues_history_journal_bottom, { :journal => journal }) %>  
  <% end %>
<% end %>

<% heads_for_wiki_formatter if User.current.allowed_to?(:edit_issue_notes, issue.project) || User.current.allowed_to?(:edit_own_issue_notes, issue.project) %>

<% end %>